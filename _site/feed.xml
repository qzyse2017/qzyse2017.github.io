<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-07-22T08:50:43+08:00</updated><id>http://localhost:4000/</id><title type="html">Zyck‚Äôs Blog</title><subtitle>&quot;not to pursue what was easy, but to tackle the biggest and hardest problems in computer science.&quot;</subtitle><author><name>Zyck</name></author><entry><title type="html">share my experience in playong with hyperledger fabric</title><link href="http://localhost:4000/daily-posts/2018/07/20/Share-my-experience-in-playing-with-hyperledger-fabric.html" rel="alternate" type="text/html" title="share my experience in playong with hyperledger fabric" /><published>2018-07-20T21:26:00+08:00</published><updated>2018-07-20T21:26:00+08:00</updated><id>http://localhost:4000/daily-posts/2018/07/20/Share-my-experience-in-playing-with-hyperledger-fabric</id><content type="html" xml:base="http://localhost:4000/daily-posts/2018/07/20/Share-my-experience-in-playing-with-hyperledger-fabric.html">&lt;h2 id=&quot;7-14&quot;&gt;7-14&lt;/h2&gt;
&lt;p&gt;Saw a &lt;a href=&quot;https://tianchi.aliyun.com/competition/gameList.htm#tab%3DActive%26pageIndex%3D1&quot;&gt;contest about blockchain here&lt;/a&gt; and decided to try it out.&lt;br /&gt;
The experiences about the work are wrote at the end of this article. Before them I wrote a lot of details just for fun‚Ä¶&lt;/p&gt;

&lt;p&gt;The site sent emails about contests to my mailbox regularly. I‚Äôm not interested in these contests usually. Most of them are related to data analysis with many machine learning algorithms which I disliked a lot. I do not like to solve problems without doing researches about them seriously and simply use some algorithms based on probability theory, and too many people are attracted to the field, going with the stream always makes me anxious and I decide not to pursue what most people are pursuing. &lt;br /&gt;
This contest seems very different. I happened to see another challenge on topcoder about hacking a smart contracts and I read some related materials, though I do not get the work done at last, things about smart contracts really attracted me. This contest seems much easier than the previous one and the time allowed to get work done is much longer, and most importantly it requires  participants to use Go ‚ù§. Following my heart I registered for it and chose a very cool nickname and a very cool pseudo institute name.&lt;/p&gt;

&lt;p&gt;&amp;gt;_&amp;lt; Can‚Äôt help praising &lt;a href=&quot;https://golang.org/doc&quot;&gt;golang‚Äôs beautiful documentation&lt;/a&gt;, in contrast with that of &lt;a href=&quot;http://hyperledger-fabric.readthedocs.io/en/latest&quot;&gt;Fabric&lt;/a&gt;, I often get confused about how many people have contributed to its documentation. It seems so inconsistent in description in teaching a developer to learn its detail and some of contents get redundant. More love for my beautiful golang with many handy tools. A true modernized language that empowers developers a lot. ‚ù§ ‚ù§ ‚ù§&lt;br /&gt;
emmm, Fabric‚Äôs example also has some problems in its deploying script, I had to read the script and completed some of its commands manually to get the example run properly‚Ä¶.~&amp;gt;_&amp;lt;~‚Ä¶.&lt;br /&gt;
Strongly recommend this &lt;a href=&quot;https://godoc.org/github.com/hyperledger/fabric/core/chaincode/shim#Chaincode&quot;&gt;documentation in godoc&lt;/a&gt;. it is much more clear if you are a &lt;a href=&quot;https://blog.golang.org/gopher&quot;&gt;Gopher&lt;/a&gt; and are going to implement your code in golang. And in case the version you are used changes its function signature from the documentation, you had better refer &lt;a href=&quot;https://github.com/hyperledger/fabric&quot;&gt;the source code mirror&lt;/a&gt; in github also.&lt;/p&gt;

&lt;p&gt;‚Ä¶.emmm..the intellisense in vscode for golang seems not to work under ubuntu‚Ä¶so sad‚Ä¶.&lt;/p&gt;

&lt;h2 id=&quot;7-15&quot;&gt;7-15&lt;/h2&gt;
&lt;p&gt;The intellisense for golang began to work properly after I restarted my vscode. Strongly recommend vscode for golang developing, with open source &lt;a href=&quot;https://github.com/Microsoft/vscode-go&quot;&gt;plugin&lt;/a&gt;, quick start speed and much lower memory footprint in contrast with visual studio, it is almost the best IDE I have ever seen. ‚ù§ ‚ù§ ‚ù§&lt;br /&gt;
 It seems the Fabric does not follow golang‚Äôs recommended path convention either, the compiled file was not sent to &lt;code class=&quot;highlighter-rouge&quot;&gt;bin&lt;/code&gt; directory but in the same directory as the source code‚Ä¶&lt;br /&gt;
 It reminds me of the days when I was developing with verilog under Xilinx software suite‚Ä¶üò¢‚Ä¶more time spent in struggling with development environment rather than coding and debugging‚Ä¶&lt;/p&gt;

&lt;h2 id=&quot;7-16&quot;&gt;7-16&lt;/h2&gt;
&lt;p&gt;It also seems good to do the unit test only. So few instructions for deploying the whole project in its documentation and so many obstacles in the practise‚Ä¶üò¢ Planning to do the unit test first. See &lt;a href=&quot;https://godoc.org/testing&quot;&gt;testing package&lt;/a&gt; and &lt;a href=&quot;https://github.com/hyperledger/fabric/tree/release-1.2/examples/chaincode/go/example02&quot;&gt;unit test example for chaincode in fabric&lt;/a&gt; for a reference.&lt;/p&gt;

&lt;h2 id=&quot;7-17&quot;&gt;7-17&lt;/h2&gt;
&lt;p&gt;could not test the part with encryption‚Ä¶seems no interface to import &lt;code class=&quot;highlighter-rouge&quot;&gt;transient&lt;/code&gt; parameter. Find the documentation &lt;a href=&quot;http://hyperledger-fabric.readthedocs.io/en/release-1.2/build_network.html&quot;&gt;Build your first network&lt;/a&gt; can provide some help, and its &lt;a href=&quot;https://github.com/hyperledger/fabric-samples/blob/release-1.2/first-network&quot;&gt;referred directory&lt;/a&gt; also helps a lot.&lt;/p&gt;

&lt;h2 id=&quot;7-18&quot;&gt;7-18&lt;/h2&gt;
&lt;p&gt;learned how to write shell scripts and how to use docker from scratch‚Ä¶.near the end‚Ä¶.üò≠&lt;br /&gt;
‚Ä¶test passed, uploaded my code, hoping I have understood the meaning of the question correctly‚Ä¶üò≠
work done‚Ä¶
The qualifying round is really easy in contrast with that of topcoder‚Ä¶ but the competition in topcoder is much less competitive and the average hourly pay there (if got successfully) is much higher‚Ä¶&lt;/p&gt;

&lt;h2 id=&quot;about-&quot;&gt;about üôÑ&lt;/h2&gt;
&lt;p&gt;Happened to find that I really dislike the rules‚Ä¶ different from the rules of other contest in this site, the rules showed in this contest indicates that it may required more teams than the number of the eventual prizes to go to the final round. I really do not care what the final teams will show about their works, really do not care the mysterious conference and do not to go to a tourism city üôÑ. If some teams are not certain to get the bonus attractive enough, why should they travel so long to go to the final round on site üôÑ.&lt;br /&gt;
decided to choose the third topic which is about implementing some basic functionalities supporting hyperledger-fabric. Not caring about the prize now, üôÑ the first two topics are really hard, and I do not think any team here may issue a good solution in a month time. In real world‚Äôs scenario, there are always a lot of parts to take into consideration and hackers can easily hack your system if any section of your system is unsecure.&lt;br /&gt;
doubt about why they choose Go to implement a framework supporting smart contracts now üôÑ, really convinced haskell would be a better choice, or just Rust?&lt;br /&gt;
Anyway, smart contract is a really attractive field, will continue to focus on it.&lt;/p&gt;

&lt;h2 id=&quot;share-some-experience-in-getting-work-done&quot;&gt;Share some experience in getting work done&lt;/h2&gt;

&lt;p&gt;Fabric‚Äôs documents are a bit of a mess and these following parts seems more important:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://hyperledger-fabric.readthedocs.io/en/release-1.2/glossary.html&quot;&gt;glossary&lt;/a&gt; learn key concepts in fabric&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://hyperledger-fabric.readthedocs.io/en/release-1.2/network/network.html&quot;&gt;network in fabric&lt;/a&gt; very important in understanding the test scripts correctly and rewriting them&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://hyperledger-fabric.readthedocs.io/en/release-1.2/build_network.html&quot;&gt;Build your first network&lt;/a&gt; about testing your chaincode in network&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://hyperledger-fabric.readthedocs.io/en/release-1.2/chaincode4ade.html&quot;&gt;Chaincode for developers&lt;/a&gt; about testing your chaincode in developing mode, this mode is much easier to use than the previous one and you just need to fix the path mapped to docker containers‚Äô path and replace the testcase in tutorials with your own.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hyperledger/fabric-samples/&quot;&gt;fabric samples with test scripts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://godoc.org/github.com/hyperledger/fabric/core/chaincode/shim&quot;&gt;godoc for fabric&lt;/a&gt; it matters a lot to read the signatures carefully and write your code with many error catches, it helps a lot in quickly locating the error parts and get the feedback from error messages, &lt;code class=&quot;highlighter-rouge&quot;&gt;fmt.print()&lt;/code&gt; seems not to work in chaincode in devmode, I did not read scripts about output carefully and can not provide more details.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The samples may vary a lot and you may get confused by some parameters‚Äô usage, I returned the parameters I got as the results while developing to make it clear.
The encryption parts can be solved using functions in &lt;code class=&quot;highlighter-rouge&quot;&gt;bccsp/sw&lt;/code&gt; and &lt;a href=&quot;https://github.com/hyperledger/fabric/tree/master/examples/chaincode/go/enccc_example&quot;&gt;this example&lt;/a&gt; helps a lot.&lt;/p&gt;</content><author><name>Zyck</name></author><summary type="html">7-14 Saw a contest about blockchain here and decided to try it out. The experiences about the work are wrote at the end of this article. Before them I wrote a lot of details just for fun‚Ä¶ The site sent emails about contests to my mailbox regularly. I‚Äôm not interested in these contests usually. Most of them are related to data analysis with many machine learning algorithms which I disliked a lot. I do not like to solve problems without doing researches about them seriously and simply use some algorithms based on probability theory, and too many people are attracted to the field, going with the stream always makes me anxious and I decide not to pursue what most people are pursuing. This contest seems very different. I happened to see another challenge on topcoder about hacking a smart contracts and I read some related materials, though I do not get the work done at last, things about smart contracts really attracted me. This contest seems much easier than the previous one and the time allowed to get work done is much longer, and most importantly it requires participants to use Go ‚ù§. Following my heart I registered for it and chose a very cool nickname and a very cool pseudo institute name. &amp;gt;_&amp;lt; Can‚Äôt help praising golang‚Äôs beautiful documentation, in contrast with that of Fabric, I often get confused about how many people have contributed to its documentation. It seems so inconsistent in description in teaching a developer to learn its detail and some of contents get redundant. More love for my beautiful golang with many handy tools. A true modernized language that empowers developers a lot. ‚ù§ ‚ù§ ‚ù§ emmm, Fabric‚Äôs example also has some problems in its deploying script, I had to read the script and completed some of its commands manually to get the example run properly‚Ä¶.~&amp;gt;_&amp;lt;~‚Ä¶. Strongly recommend this documentation in godoc. it is much more clear if you are a Gopher and are going to implement your code in golang. And in case the version you are used changes its function signature from the documentation, you had better refer the source code mirror in github also. ‚Ä¶.emmm..the intellisense in vscode for golang seems not to work under ubuntu‚Ä¶so sad‚Ä¶. 7-15 The intellisense for golang began to work properly after I restarted my vscode. Strongly recommend vscode for golang developing, with open source plugin, quick start speed and much lower memory footprint in contrast with visual studio, it is almost the best IDE I have ever seen. ‚ù§ ‚ù§ ‚ù§ It seems the Fabric does not follow golang‚Äôs recommended path convention either, the compiled file was not sent to bin directory but in the same directory as the source code‚Ä¶ It reminds me of the days when I was developing with verilog under Xilinx software suite‚Ä¶üò¢‚Ä¶more time spent in struggling with development environment rather than coding and debugging‚Ä¶ 7-16 It also seems good to do the unit test only. So few instructions for deploying the whole project in its documentation and so many obstacles in the practise‚Ä¶üò¢ Planning to do the unit test first. See testing package and unit test example for chaincode in fabric for a reference. 7-17 could not test the part with encryption‚Ä¶seems no interface to import transient parameter. Find the documentation Build your first network can provide some help, and its referred directory also helps a lot. 7-18 learned how to write shell scripts and how to use docker from scratch‚Ä¶.near the end‚Ä¶.üò≠ ‚Ä¶test passed, uploaded my code, hoping I have understood the meaning of the question correctly‚Ä¶üò≠ work done‚Ä¶ The qualifying round is really easy in contrast with that of topcoder‚Ä¶ but the competition in topcoder is much less competitive and the average hourly pay there (if got successfully) is much higher‚Ä¶ about üôÑ Happened to find that I really dislike the rules‚Ä¶ different from the rules of other contest in this site, the rules showed in this contest indicates that it may required more teams than the number of the eventual prizes to go to the final round. I really do not care what the final teams will show about their works, really do not care the mysterious conference and do not to go to a tourism city üôÑ. If some teams are not certain to get the bonus attractive enough, why should they travel so long to go to the final round on site üôÑ. decided to choose the third topic which is about implementing some basic functionalities supporting hyperledger-fabric. Not caring about the prize now, üôÑ the first two topics are really hard, and I do not think any team here may issue a good solution in a month time. In real world‚Äôs scenario, there are always a lot of parts to take into consideration and hackers can easily hack your system if any section of your system is unsecure. doubt about why they choose Go to implement a framework supporting smart contracts now üôÑ, really convinced haskell would be a better choice, or just Rust? Anyway, smart contract is a really attractive field, will continue to focus on it. Share some experience in getting work done Fabric‚Äôs documents are a bit of a mess and these following parts seems more important: glossary learn key concepts in fabric network in fabric very important in understanding the test scripts correctly and rewriting them Build your first network about testing your chaincode in network Chaincode for developers about testing your chaincode in developing mode, this mode is much easier to use than the previous one and you just need to fix the path mapped to docker containers‚Äô path and replace the testcase in tutorials with your own. fabric samples with test scripts godoc for fabric it matters a lot to read the signatures carefully and write your code with many error catches, it helps a lot in quickly locating the error parts and get the feedback from error messages, fmt.print() seems not to work in chaincode in devmode, I did not read scripts about output carefully and can not provide more details. The samples may vary a lot and you may get confused by some parameters‚Äô usage, I returned the parameters I got as the results while developing to make it clear. The encryption parts can be solved using functions in bccsp/sw and this example helps a lot.</summary></entry><entry><title type="html">How to get motivation when programming</title><link href="http://localhost:4000/daily-posts/2018/07/20/How-to-get-motivation-when-programming.html" rel="alternate" type="text/html" title="How to get motivation when programming" /><published>2018-07-20T00:26:00+08:00</published><updated>2018-07-20T00:26:00+08:00</updated><id>http://localhost:4000/daily-posts/2018/07/20/How-to-get-motivation-when-programming</id><content type="html" xml:base="http://localhost:4000/daily-posts/2018/07/20/How-to-get-motivation-when-programming.html">&lt;h2 id=&quot;genesis-of-the-problem&quot;&gt;Genesis of the problem&lt;/h2&gt;
&lt;p&gt;I got the problem from a short discussion with a senior schoolmate, KW, an excellent software engineer ‚ú®. We discussed about working remotely and he issued this good question about how to motivate onself while working alone. I thought about the situations where I did my homework with many classmates in the same classroom when I was in middle school and those where I did homework at home and thought it is a very meaningful question, indeed.&lt;/p&gt;

&lt;h2 id=&quot;answer-from-the-discussion-on-quara&quot;&gt;Answer from the discussion on quara&lt;/h2&gt;
&lt;p&gt;I find some discussions just like &lt;a href=&quot;https://www.quora.com/How-does-remote-working-work&quot;&gt;working remotely&lt;/a&gt; and I think the situation the first user talked about where members worked well can be contributed to their good workflow and some handy tools. I have also read about some freelance software developers‚Äô talking about their careers and daily lives, and I tend to believe that most of them did their work well because they really loved to work and took the work seriously, they did not tend to let themselves feel very relaxed when working, most developers tended to make their workspace very clean with just some essential tools like personal computer, notebook, keyboards, etc. They kept themselves dedicated just as they were in an office of a company‚Äôs building.
And back to the problem indicated in the title, I saw another discussion:&lt;a href=&quot;https://www.quora.com/What-can-I-do-to-motivate-myself-for-programming-regularly-for-4-6-hours&quot;&gt;discussion from quara What-can-I-do-to-motivate-myself-for-programming-regularly-for-4-6-hour&lt;/a&gt;. The main points extracted from the first two answers can be listed as below:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Interest matters a lot but now I do not think every one can do some awesome work like those with great talents, e.g. Elon Musk, &lt;a href=&quot;https://www.quora.com/Who-is-Ryan-Dahl-He-started-Node-js-an-open-source-Web-server-with-a-lot-of-buzz-yet-I-cant-find-any-background-on-this-individual-that-has-created-this-incredible-software&quot;&gt;Ryan Dahl&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;detailed and clear roadmap like a todo list is very important.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;answer-from-my-experience&quot;&gt;Answer from my experience&lt;/h2&gt;
&lt;p&gt;From my experience, I agree with the above two points a lot and another point I want to add is, some proper pressure,e.g. a deadline, some benefits which you will lose if you do not work fast. &lt;br /&gt;
But I do not think pressure is good for some awesome ideas to come to your mind, they usually come when you get relaxed after some work which got your some nervous (I have always come up with some good solutions just atfer I hand in my papers in exams &amp;gt;_&amp;lt; )&lt;br /&gt;
To talk some more details about the first two points, I think they are more important than pressure in helping us learn more things.&lt;br /&gt;
The first one is very tempting but thanks to the kind suggestion from my schoolmate, KW, I gradually found that it is not so easy to do every thing that interest me well, and concentrating on fewer things may let me become proficient in some skills more easily. But as a stubborn person, I really think something interest me may take me away from what I have been working on for many year in the future üò¢ .&lt;br /&gt;
And I think the second one is almost the key point to keep a person working efficiently. I often found something had taken me more time than needed just because I did not get a detailed and clear roadmaps at first and sometimes it may be due to the loss of courage to think about the difficult parts carefully and the problem is not interested to me at all, as a result, I spent a lot of time just wandering in the reading materials and hoping some key points I encountered may take me out. But in fact, it just took more time.&lt;br /&gt;
The correct way to get hard things done may be just leaving it aside and doing the most urgent jobs first. When it come to the time near deadline, with the pressure and all the knowledge already known to oneself, the work can be done quickly.&lt;br /&gt;
At last, I think using some persons you admire a lot to encourage yourself is good idea, I used to use Hua Luogeng as my idol to encourage myself to be diligent. And now I use a lot of great masters in computer science and an excellent schoolmate I met as my idols. Luxun‚Äôs method of using his teacher‚Äôs photo to encourage himself seems to work for me as well. Just look at these photos and you will think of their great achievements. Just some names in words may also help. Use something to remind you what the excellent predecessors have achieved and make some clear and achievable goals for yourself.&lt;/p&gt;</content><author><name>Zyck</name></author><summary type="html">Genesis of the problem I got the problem from a short discussion with a senior schoolmate, KW, an excellent software engineer ‚ú®. We discussed about working remotely and he issued this good question about how to motivate onself while working alone. I thought about the situations where I did my homework with many classmates in the same classroom when I was in middle school and those where I did homework at home and thought it is a very meaningful question, indeed.</summary></entry><entry><title type="html">How to learn from CLRS</title><link href="http://localhost:4000/daily-posts/2018/07/05/How-to-learn-from-CLRS.html" rel="alternate" type="text/html" title="How to learn from CLRS" /><published>2018-07-05T09:26:00+08:00</published><updated>2018-07-05T09:26:00+08:00</updated><id>http://localhost:4000/daily-posts/2018/07/05/How-to-learn-from-CLRS</id><content type="html" xml:base="http://localhost:4000/daily-posts/2018/07/05/How-to-learn-from-CLRS.html">&lt;h2 id=&quot;why-is-introduction-to-algorithms-worth-reading&quot;&gt;Why is &lt;code class=&quot;highlighter-rouge&quot;&gt;Introduction to Algorithms&lt;/code&gt; worth reading?&lt;/h2&gt;
&lt;p&gt;It is often said that a book is classic and so it is worth reading, but I think being ‚Äòclassic‚Äô is in fact the result but not the reason of the book‚Äôs great value. Having reading some important parts in CLRS (join the first letter of the authors‚Äô last name together), I‚Äôm going to write some points about the book‚Äôs value in my opinion.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;read it carefully and have a good understanding of the theories, you will have a higher probability to get a good grade for your algorithm course : ) .&lt;/li&gt;
  &lt;li&gt;A good understanding of the discussion on algorithms‚Äô correctness and complexity helps you learn to design your own algorithm and optimize it. Although for most programmers and for our most time in working, we don‚Äôt need to do it ourselves but mastering this crucial skills can make us more valuable over time and changes.&lt;/li&gt;
  &lt;li&gt;if you love math and you love coding, reading this book enables you to communicate deeply with the great masters and you learn more about what you love.&lt;/li&gt;
  &lt;li&gt;the book is well-organized and only requires some basic knowledge on math and programming. Appendixes at the end of the book also offer theories used in the book. There should be little difficulty in reading this book.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;how-to-learn-from-it-in-a-proper-way&quot;&gt;How to learn from it in a proper way&lt;/h2&gt;
&lt;p&gt;According to your purpose for reading, you may read it in different ways.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;you read it to get a good grade&lt;/strong&gt; ‚Äì You may need to pay more attention to the discussion parts and try your best to learn the basic &lt;code class=&quot;highlighter-rouge&quot;&gt;techniques&lt;/code&gt; in them. &lt;br /&gt;
There‚Äôs usually a specific way for some similar problems and you need to just remember the patterns of the problems and their answers in a way like how you memorize your usernames and passwords. Extract the features of the given conditions and the steps of getting to specific deductions using the conditions.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;you read it to learn how to write &lt;code class=&quot;highlighter-rouge&quot;&gt;good&lt;/code&gt; programms&lt;/strong&gt; ‚Äì you may need to practise a lot with more thinking and trials to figure out the keys to some detailed problems.&lt;br /&gt;
&lt;strong&gt;Choose appropriate data structures.&lt;/strong&gt; According to some points like, the data structures‚Äô underlying implementations, the safety and time costs of basic operations used in the algorithms, you choose your language and relavant implementations. You may implement the basic data structures yourself, according to some restrictions in your projects. Using some frequenlty used libraries may help accelerating the development but may take more time to shoot the troubles if the troubles are caused by your improper use and the data structures‚Äô complicated implementations.&lt;br /&gt;
&lt;strong&gt;Memorize the advantages and disadvantages of alogrithms with similar purposes.&lt;/strong&gt; It help you do your work more quick if the problem just needs some common algorithms.&lt;br /&gt;
&lt;strong&gt;Read the algorithms‚Äô pseudo code and implement the algorithm yourself in your familiar language.&lt;/strong&gt; It helps you get a better understanding of the languages and also helps you learn more techniques in implementing the algorithms elegantly. Implementing an algorithm properly is an important skills for a programmer and by practising and refactoring your code, you can see the influence of practice.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;you read it to solve a problem on algorithms in your work.&lt;/strong&gt; ‚Äì As the title of the book indicates, this book is just an introduction. If your problems are common, you just need to read relavant chapters and find your solutions however I don‚Äôt think some common problems will require you to read this book so problems you overcome may more likely be the ones which require you read relavant papers with deeper discussions. At the End of each chapters, the authors summarized the history of the solutions and  provided some relavant classic papers for your to read further.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;keep a strong desire to read the book.&lt;/strong&gt; Any condition discussed above should provide you with strong desires to read the book. Interests usually don‚Äôt support you to read such a tome. To complete reading, you need to have a strong curiosity to find answers or you need a strong ambition to become an excellent programmer or engineer. Otherwise, you may just need an exam coming tomorrow. : )&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Zyck</name></author><summary type="html">Why is Introduction to Algorithms worth reading? It is often said that a book is classic and so it is worth reading, but I think being ‚Äòclassic‚Äô is in fact the result but not the reason of the book‚Äôs great value. Having reading some important parts in CLRS (join the first letter of the authors‚Äô last name together), I‚Äôm going to write some points about the book‚Äôs value in my opinion. read it carefully and have a good understanding of the theories, you will have a higher probability to get a good grade for your algorithm course : ) . A good understanding of the discussion on algorithms‚Äô correctness and complexity helps you learn to design your own algorithm and optimize it. Although for most programmers and for our most time in working, we don‚Äôt need to do it ourselves but mastering this crucial skills can make us more valuable over time and changes. if you love math and you love coding, reading this book enables you to communicate deeply with the great masters and you learn more about what you love. the book is well-organized and only requires some basic knowledge on math and programming. Appendixes at the end of the book also offer theories used in the book. There should be little difficulty in reading this book. How to learn from it in a proper way According to your purpose for reading, you may read it in different ways. you read it to get a good grade ‚Äì You may need to pay more attention to the discussion parts and try your best to learn the basic techniques in them. There‚Äôs usually a specific way for some similar problems and you need to just remember the patterns of the problems and their answers in a way like how you memorize your usernames and passwords. Extract the features of the given conditions and the steps of getting to specific deductions using the conditions. you read it to learn how to write good programms ‚Äì you may need to practise a lot with more thinking and trials to figure out the keys to some detailed problems. Choose appropriate data structures. According to some points like, the data structures‚Äô underlying implementations, the safety and time costs of basic operations used in the algorithms, you choose your language and relavant implementations. You may implement the basic data structures yourself, according to some restrictions in your projects. Using some frequenlty used libraries may help accelerating the development but may take more time to shoot the troubles if the troubles are caused by your improper use and the data structures‚Äô complicated implementations. Memorize the advantages and disadvantages of alogrithms with similar purposes. It help you do your work more quick if the problem just needs some common algorithms. Read the algorithms‚Äô pseudo code and implement the algorithm yourself in your familiar language. It helps you get a better understanding of the languages and also helps you learn more techniques in implementing the algorithms elegantly. Implementing an algorithm properly is an important skills for a programmer and by practising and refactoring your code, you can see the influence of practice. you read it to solve a problem on algorithms in your work. ‚Äì As the title of the book indicates, this book is just an introduction. If your problems are common, you just need to read relavant chapters and find your solutions however I don‚Äôt think some common problems will require you to read this book so problems you overcome may more likely be the ones which require you read relavant papers with deeper discussions. At the End of each chapters, the authors summarized the history of the solutions and provided some relavant classic papers for your to read further. keep a strong desire to read the book. Any condition discussed above should provide you with strong desires to read the book. Interests usually don‚Äôt support you to read such a tome. To complete reading, you need to have a strong curiosity to find answers or you need a strong ambition to become an excellent programmer or engineer. Otherwise, you may just need an exam coming tomorrow. : )</summary></entry><entry><title type="html">Use Tennyson‚Äôs verses to greet my new blog</title><link href="http://localhost:4000/daily-posts/2018/07/03/Use-Tennyson's-verses-to-greet-my-new-blog.html" rel="alternate" type="text/html" title="Use Tennyson's verses to greet my new blog" /><published>2018-07-03T15:32:20+08:00</published><updated>2018-07-03T15:32:20+08:00</updated><id>http://localhost:4000/daily-posts/2018/07/03/Use-Tennyson's-verses-to-greet-my-new-blog</id><content type="html" xml:base="http://localhost:4000/daily-posts/2018/07/03/Use-Tennyson's-verses-to-greet-my-new-blog.html">&lt;p&gt;use Tennyson‚Äôs verses from the poem &lt;code class=&quot;highlighter-rouge&quot;&gt;Ulysses&lt;/code&gt; to greet my new blog and also to encourage myself to always stand up to difficulties in my career with code&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Though much is taken, much abides; and though

We are not now that strength which in old days

Moved earth and heaven, that which we are, we are‚Äî‚Äî

One equal temper of heroic heartsÔºå

Made weak by time and fate, but strong in will

To strive, to seek, to find and not to yield.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Zyck</name></author><summary type="html">use Tennyson‚Äôs verses from the poem Ulysses to greet my new blog and also to encourage myself to always stand up to difficulties in my career with code ``` Though much is taken, much abides; and though</summary></entry></feed>